{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 207, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/genkit.ts"],"sourcesContent":["import {genkit} from 'genkit';\nimport {googleAI} from '@genkit-ai/googleai';\n\nexport const ai = genkit({\n  plugins: [googleAI()],\n  model: 'googleai/gemini-2.0-flash',\n});\n"],"names":[],"mappings":";;;AAAA;AAAA;AACA;AAAA;;;AAEO,MAAM,KAAK,CAAA,GAAA,uIAAA,CAAA,SAAM,AAAD,EAAE;IACvB,SAAS;QAAC,CAAA,GAAA,2KAAA,CAAA,WAAQ,AAAD;KAAI;IACrB,OAAO;AACT","debugId":null}},
    {"offset": {"line": 228, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/generate-node-content.ts"],"sourcesContent":["'use server';\n\n/**\n * @fileOverview This file defines a Genkit flow for generating content for nodes in the Concept Canvas application.\n *\n * It allows users to select a node and use buttons like 'WHAT', 'HOW', 'WHEN', 'EXPLAIN', and 'EXPAND' to generate new content related to the selected node.\n *\n * @interface GenerateNodeContentInput - The input type for the generateNodeContent function.\n * @interface GenerateNodeContentOutput - The output type for the generateNodeContent function.\n * @function generateNodeContent - The main function that triggers the content generation flow.\n */\n\nimport {ai} from '@/ai/genkit';\nimport {z} from 'genkit';\n\nconst GenerateNodeContentInputSchema = z.object({\n  parentNodeContent: z.string().describe('The content of the parent node.'),\n  queryType: z\n    .enum(['WHAT', 'HOW', 'WHEN', 'EXPLAIN', 'EXPAND', 'CUSTOM'])\n    .describe('The type of query to generate content for.'),\n  customQuery: z.string().optional().describe('A custom query provided by the user.'),\n  responseLength: z.number().optional().describe('The desired length of the response in words.'),\n  autoLength: z.boolean().optional().describe('Whether the AI should automatically determine the response length.'),\n  responseFormat: z.string().optional().describe('The desired format for the response (e.g., paragraph, bullet points).'),\n  tone: z.string().optional().describe('The desired tone for the response (e.g., professional, friendly).'),\n  customInstructions: z.string().optional().describe('Any custom instructions for the AI.'),\n});\nexport type GenerateNodeContentInput = z.infer<typeof GenerateNodeContentInputSchema>;\n\nconst GenerateNodeContentOutputSchema = z.object({\n  generatedContent: z.string().describe('The AI-generated content for the node.'),\n});\nexport type GenerateNodeContentOutput = z.infer<typeof GenerateNodeContentOutputSchema>;\n\nexport async function generateNodeContent(input: GenerateNodeContentInput): Promise<GenerateNodeContentOutput> {\n  return generateNodeContentFlow(input);\n}\n\nconst prompt = ai.definePrompt({\n  name: 'generateNodeContentPrompt',\n  input: {\n    schema: GenerateNodeContentInputSchema,\n  },\n  output: {\n    schema: GenerateNodeContentOutputSchema,\n  },\n  prompt: `You are an AI assistant designed to generate content for a concept canvas.\n\nYou will receive the content of a parent node and a query type.\nBased on these inputs, generate content that expands on the parent node's content, answering the query.\n\nParent Node Content: {{{parentNodeContent}}}\nQuery Type: {{{queryType}}}\n\n{{#if customQuery}}\nCustom Query: {{{customQuery}}}\n{{/if}}\n\nPlease adhere to the following instructions for your response:\n{{#if tone}}\n- Adopt a {{{tone}}} tone.\n{{/if}}\n{{#if responseFormat}}\n- Format your response as {{{responseFormat}}}.\n{{/if}}\n{{#unless autoLength}}\n{{#if responseLength}}\n- Keep the response length around {{{responseLength}}} words.\n{{/if}}\n{{/unless}}\n{{#if customInstructions}}\n- Follow these custom instructions: {{{customInstructions}}}\n{{/if}}\n\nContent:`,\n});\n\nconst generateNodeContentFlow = ai.defineFlow(\n  {\n    name: 'generateNodeContentFlow',\n    inputSchema: GenerateNodeContentInputSchema,\n    outputSchema: GenerateNodeContentOutputSchema,\n  },\n  async input => {\n    let promptInput = input;\n    if (input.queryType === 'CUSTOM') {\n      if (!input.customQuery) {\n        throw new Error('Custom query must be provided when queryType is CUSTOM.');\n      }\n    }\n\n    const {output} = await prompt(promptInput);\n    return output!;\n  }\n);\n"],"names":[],"mappings":";;;;;AAEA;;;;;;;;CAQC,GAED;AACA;AAAA;;;;;;AAEA,MAAM,iCAAiC,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC9C,mBAAmB,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IACvC,WAAW,uIAAA,CAAA,IAAC,CACT,IAAI,CAAC;QAAC;QAAQ;QAAO;QAAQ;QAAW;QAAU;KAAS,EAC3D,QAAQ,CAAC;IACZ,aAAa,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,GAAG,QAAQ,CAAC;IAC5C,gBAAgB,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,GAAG,QAAQ,CAAC;IAC/C,YAAY,uIAAA,CAAA,IAAC,CAAC,OAAO,GAAG,QAAQ,GAAG,QAAQ,CAAC;IAC5C,gBAAgB,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,GAAG,QAAQ,CAAC;IAC/C,MAAM,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,GAAG,QAAQ,CAAC;IACrC,oBAAoB,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,GAAG,QAAQ,CAAC;AACrD;AAGA,MAAM,kCAAkC,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC/C,kBAAkB,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;AACxC;AAGO,eAAe,oBAAoB,KAA+B;IACvE,OAAO,wBAAwB;AACjC;AAEA,MAAM,SAAS,mHAAA,CAAA,KAAE,CAAC,YAAY,CAAC;IAC7B,MAAM;IACN,OAAO;QACL,QAAQ;IACV;IACA,QAAQ;QACN,QAAQ;IACV;IACA,QAAQ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;QA4BH,CAAC;AACT;AAEA,MAAM,0BAA0B,mHAAA,CAAA,KAAE,CAAC,UAAU,CAC3C;IACE,MAAM;IACN,aAAa;IACb,cAAc;AAChB,GACA,OAAM;IACJ,IAAI,cAAc;IAClB,IAAI,MAAM,SAAS,KAAK,UAAU;QAChC,IAAI,CAAC,MAAM,WAAW,EAAE;YACtB,MAAM,IAAI,MAAM;QAClB;IACF;IAEA,MAAM,EAAC,MAAM,EAAC,GAAG,MAAM,OAAO;IAC9B,OAAO;AACT;;;IA3DoB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 335, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/.next-internal/server/app/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {generateNodeContent as '408a737361d8973fb3383b5825abbfca9f5d798ca1'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 387, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/concept-canvas.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const ConceptCanvas = registerClientReference(\n    function() { throw new Error(\"Attempted to call ConceptCanvas() from the server but ConceptCanvas is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/concept-canvas.tsx <module evaluation>\",\n    \"ConceptCanvas\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,gBAAgB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC/C;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,mEACA","debugId":null}},
    {"offset": {"line": 401, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/concept-canvas.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const ConceptCanvas = registerClientReference(\n    function() { throw new Error(\"Attempted to call ConceptCanvas() from the server but ConceptCanvas is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/concept-canvas.tsx\",\n    \"ConceptCanvas\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,gBAAgB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC/C;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,+CACA","debugId":null}},
    {"offset": {"line": 415, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 425, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/page.tsx"],"sourcesContent":["import { ConceptCanvas } from '@/components/concept-canvas';\n\nexport default function Home() {\n  return (\n    <main className=\"h-screen w-screen bg-background text-foreground overflow-hidden\">\n      <ConceptCanvas />\n    </main>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;;;AAEe,SAAS;IACtB,qBACE,8OAAC;QAAK,WAAU;kBACd,cAAA,8OAAC,uIAAA,CAAA,gBAAa;;;;;;;;;;AAGpB","debugId":null}}]
}